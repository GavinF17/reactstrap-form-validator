import React from 'react';
import {Button, Col, CustomInput, FormGroup, Input, Label, Row} from "reactstrap";
import {VCustomInput, VForm, VFormGroup, VInput} from "reactstrap-form-validator";
import {PrismCode} from "../../../components/PrismCode";
import {PropsTable} from "../../../components/PropsTable";

const VFormCode = `
<VForm onValidSubmit={(values) => alert(JSON.stringify(values))}>
  <VFormGroup>
    <Label>Name</Label>
    <VInput name="name" type="text"/>
  </VFormGroup>
  <VFormGroup>
    <VCustomInput name="enabled" label="Enabled" type="checkbox"/>
  </VFormGroup>
  <Button type="submit">Submit</Button>
</VForm>
`

export const VFormSection = () => {
  return (
    <>
      <Row>
        <Col>
          <p>
            VForm is the main wrapper for the forms, it provides the main functionality as well as the Context that the
            other components require.
          </p>
        </Col>
      </Row>
      <Row>
        <Col md={6} sm={12}>
          <h4>Code</h4>
          <PrismCode code={VFormCode}/>
        </Col>
        <Col md={6} sm={12}>
          <h4>Rendered</h4>
          <VForm onValidSubmit={(values) => alert(JSON.stringify(values))}>
            <VFormGroup>
              <Label>Name</Label>
              <VInput name="name" type="text"/>
            </VFormGroup>
            <VFormGroup>
              <VCustomInput name="enabled" label="Enabled" type="checkbox"/>
            </VFormGroup>
            <Button type="submit">Submit</Button>
          </VForm>
        </Col>
      </Row>
      <Row>
        <Col>
          <h4>Props</h4>
          <PropsTable props={[
            {prop: "validateEvents"},
            {prop: "onValidSubmit"},
            {prop: "onInvalidSubmit"},
            {
              prop: "externalErrors",
              example: JSON.stringify({name: ["Name is too short", "Name can only contain letters"]}),
              description: <>Object used to provide errors from an external source, such as an API submission. Formatted
                as <code>{'{FIELD_NAME: ["ERROR 1", "ERROR 2", ...]}'}</code>. Unlike errors generated by validators,
                these will not cause submission to block.</>
            },
            {prop: "children"}
          ]}/>
        </Col>
      </Row>
    </>
  );
};
